public class MainInfoGenerator {
    public static final String name = generateRandomWord();
    public static final String surname = generateRandomWord();
    public static final String patronymic = generateRandomWord();
    public static final String birthDate = generateRandomDate();
    public static final String passport = generatePassport();
    public static final String phoneNumber = generatePhoneNumber();
    public static final String departmentCode = generateDepartmentCode();
    public static final String issueDate = generateIssueDate();
    public static final String trusteeName = generateRandomWord() + " " + generateRandomWord() + " " + generateRandomWord();
    public static final String trusteePhoneNumber = generatePhoneNumber();
    public static final String registrationDate = generateIssueDate();
    public static final String drivingLicenceNumber = generateDrivingLicenceNumber();


    /**
     * Генерирует слово из 10 рандомных букв
     *
     * @return
     */
    private static String generateRandomWord() {
        Random random = new Random();
        StringBuilder stringBuilder = new StringBuilder();

        char firstLetter = (char) (random.nextInt(6) + 'А');
        stringBuilder.append(firstLetter);

        for (int i = 1; i < 10; i++) {
            char randomLetter = (char) (random.nextInt(32) + 'а');
            stringBuilder.append(randomLetter);
        }

        return stringBuilder.toString();
    }

    /**
     * Генерирует серию и номер паспорта
     *
     * @return
     */
    private static String generatePassport() {
        Random random = new Random();
        StringBuilder stringBuilder = new StringBuilder();

        for (int i = 0; i < 2; i++) {
            int digit = random.nextInt(10);
            stringBuilder.append(digit);
        }

        stringBuilder.append(" ");

        for (int i = 0; i < 2; i++) {
            int digit = random.nextInt(10);
            stringBuilder.append(digit);
        }

        stringBuilder.append(" ");

        for (int i = 0; i < 6; i++) {
            int digit = random.nextInt(10);
            stringBuilder.append(digit);
        }

        return stringBuilder.toString();
    }

    /**
     * Генерирует рандомную дату в промежутке с 01.01.1970 до 31.12.1993
     *
     * @return
     */
    private static String generateRandomDate() {
        long startDateMillis = toDateMillis(1980, 1, 1);
        long endDateMillis = toDateMillis(1999, 12, 31);

        long randomDateMillis = ThreadLocalRandom.current().nextLong(startDateMillis, endDateMillis);

        SimpleDateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy");
        Date randomDate = new Date(randomDateMillis);

        return dateFormat.format(randomDate);
    }

    /**
     * Генерирует рандомный номер телефона
     *
     * @return
     */
    private static String generatePhoneNumber() {
        Random random = new Random();
        StringBuilder stringBuilder = new StringBuilder();

        for (int i = 0; i < 10; i++) {
            int digit = random.nextInt(10);
            stringBuilder.append(digit);
        }

        return stringBuilder.toString();
    }

    /**
     * Генерирует рандомный код подразделения в формате "123-456"
     *
     * @return
     */
    private static String generateDepartmentCode() {
        Random random = new Random();

        return String.format("%d%d%d-%d%d%d",
                random.nextInt(9) + 1,
                random.nextInt(9) + 1,
                random.nextInt(9) + 1,
                random.nextInt(9) + 1,
                random.nextInt(9) + 1,
                random.nextInt(9) + 1);
    }

    /**
     * Генерирует рандомную дату выдачи паспорта в промежутке с 01.01.2017 до 31.12.2023
     *
     * @return
     */
    private static String generateIssueDate() {
        long startDateMillis = toDateMillis(2021, 1, 1);
        long endDateMillis = toDateMillis(2023, 12, 31);

        long randomDateMillis = ThreadLocalRandom.current().nextLong(startDateMillis, endDateMillis);

        SimpleDateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy");
        Date randomDate = new Date(randomDateMillis);

        return dateFormat.format(randomDate);
    }

    /**
     * Перевод даты в миллисекунды
     *
     * @param year
     * @param month
     * @param day
     * @return
     */
    private static long toDateMillis(int year, int month, int day) {
        return new Date(year - 1900, month - 1, day).getTime();
    }

    /**
     * Генерирует номер водительского удостоверения
     *
     * @return
     */
    private static String generateDrivingLicenceNumber() {
        Random random = new Random();

        int number1 = random.nextInt(100);
        int number2 = random.nextInt(100);
        int number3 = random.nextInt(10000);

        return String.format("%02d %02d %08d", number1, number2, number3);
    }

    /**
     * Изменение формата номера с "+7 (123) 456-78-90" на "1234567890"
     *
     * @param inputNumber
     * @return
     */
    public String phoneNumberFormatter(String inputNumber) {
        String cleanedNumber = inputNumber.replaceFirst("\\+7", "");
        return cleanedNumber.replaceAll("[\\s()-]", "");
    }
}
